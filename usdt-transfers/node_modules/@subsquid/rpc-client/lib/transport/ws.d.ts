import { Connection, RpcNotification, RpcRequest, RpcResponse } from '../interfaces';
export interface WsConnectionOptions {
    url: string;
    onNotificationMessage?: (msg: RpcNotification) => void;
    onReset?: (err: Error) => void;
}
export declare class WsConnection implements Connection {
    private url;
    private onNotificationMessage?;
    private onReset?;
    private _ws?;
    private connected;
    private requests;
    constructor(options: WsConnectionOptions);
    connect(): Promise<void>;
    private clear;
    close(err?: Error): void;
    private onMessage;
    private handleResponse;
    private ws;
    call(req: RpcRequest, timeout?: number): Promise<RpcResponse>;
    batchCall(batch: RpcRequest[], timeout?: number): Promise<RpcResponse[]>;
    private addTimeout;
}
//# sourceMappingURL=ws.d.ts.map